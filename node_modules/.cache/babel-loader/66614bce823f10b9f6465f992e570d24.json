{"ast":null,"code":"import _objectSpread from \"/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/src/Components/wallet.jsx\";\nimport React, { useState } from 'react';\n\nfunction Wallet({\n  chain,\n  setChangeId,\n  changeId,\n  getChain\n}) {\n  const _useState = useState({\n    \"id\": ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  let amount = 0;\n\n  const handleTextChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: [event.target.value]\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setChangeId(values.id[0]);\n  };\n\n  console.log(\"Current id\", changeId); // console.log(\"chain\", chain)\n\n  console.log(\"amount\", amount);\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"id\",\n    value: values.id,\n    placeholder: \"Add ID Here\",\n    onChange: handleTextChange(\"id\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Track\")), React.createElement(\"button\", {\n    onClick: getChain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Update Transactions\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Coins in Wallet: \", amount)), React.createElement(\"div\", {\n    style: {\n      \"display\": \"flex\",\n      \"flexFlow\": \"wrap\",\n      'justifyContent': \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, chain ? chain.map(block => {\n    return block.transactions ? block.transactions.map(transaction => {\n      {\n        transaction.recipient == changeId ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            \"width\": \"200px\",\n            \"height\": \"200px\",\n            'border': \"2px solid black\",\n            \"display\": \"flex\",\n            \"justicyContent\": \"center\",\n            \"flexDirection\": \"column\",\n            \"textAlign\": \"left\",\n            \"margin\": \"20px\",\n            \"padding\": \"20px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, transaction.sender != 0 ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, transaction.sender) : null, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Recipients Name: \", transaction.recipient), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Coins Recieved: \", transaction.amount))) : null;\n      }\n    }) : null;\n  }) : null));\n}\n\nexport default Wallet;","map":{"version":3,"sources":["/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/src/Components/wallet.jsx"],"names":["React","useState","Wallet","chain","setChangeId","changeId","getChain","values","setValues","amount","handleTextChange","name","event","target","value","handleSubmit","preventDefault","id","console","log","map","block","transactions","transaction","recipient","sender"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\n\n\nfunction Wallet({chain, setChangeId, changeId, getChain}){\n    const [values, setValues] = useState({\"id\": ''})\n    let amount = 0\n\n    const handleTextChange = name => event => {\n        setValues({ ...values, [name]:[event.target.value]});\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        setChangeId(values.id[0])\n\n    }\n    console.log(\"Current id\", changeId)\n    // console.log(\"chain\", chain)\n    console.log(\"amount\", amount)\n    return (\n        <>\n        <form onSubmit = {handleSubmit}>\n            <input \n            type =\"text\"\n            name=\"id\"\n            value={values.id}\n            placeholder=\"Add ID Here\"\n            onChange={handleTextChange(\"id\")}\n\n            />\n            <button onSubmit = {handleSubmit}>Track</button>\n        </form>\n        <button onClick = {getChain}>Update Transactions</button>\n        <div>\n            <h2>Coins in Wallet: {amount}</h2>\n        </div>\n        <div style={{\"display\": \"flex\", \"flexFlow\": \"wrap\", 'justifyContent': \"center\"}}>\n        {chain ? chain.map(block => {\n           return block.transactions ? block.transactions.map(transaction => {\n                {transaction.recipient == changeId ? \n                (\n                <div>\n                <div style ={{\"width\": \"200px\", \"height\": \"200px\", 'border': \"2px solid black\", \"display\": \"flex\", \"justicyContent\": \"center\", \"flexDirection\": \"column\", \"textAlign\": \"left\", \"margin\": \"20px\", \"padding\": \"20px\"}}>\n                    {transaction.sender != 0 ? <p>{transaction.sender}</p> : null}\n                    <p>Recipients Name: {transaction.recipient}</p>\n                    <p>Coins Recieved: {transaction.amount}</p>\n                </div>\n                </div>) : null}\n            }) : null\n        }) : null}\n        </div>\n        \n        \n        \n        </>\n    )\n}\n\nexport default Wallet"]},"metadata":{},"sourceType":"module"}