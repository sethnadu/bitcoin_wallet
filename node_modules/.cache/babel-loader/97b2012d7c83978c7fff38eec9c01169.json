{"ast":null,"code":"import _objectSpread from \"/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/src/Components/wallet.jsx\";\nimport React, { useState } from 'react';\n\nfunction Wallet({\n  chain,\n  setChangeId,\n  changeId,\n  getChain\n}) {\n  const _useState = useState({\n    \"id\": ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        amount = _useState4[0],\n        setAmount = _useState4[1];\n\n  const handleTextChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: [event.target.value]\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setChangeId(values.id[0]);\n  };\n\n  console.log(\"Current id\", changeId);\n  console.log(\"chain\", chain);\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"id\",\n    value: values.id,\n    placeholder: \"Add ID Here\",\n    onChange: handleTextChange(\"id\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Track\")), React.createElement(\"button\", {\n    onClick: getChain,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Update Transactions\"), chain ? chain.map(block => {\n    return React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, block);\n    {\n      /* {block.transactions ? Object.keys(block.transactions).map(transaction => {\n          return transaction.recipient && transaction.recipient == block ? \n          (<div>\n              <h2>{transaction.amount}</h2>\n          </div>) :<h2>two: {transaction}</h2>\n      }) : <h2>three: {block.transactions}</h2>} */\n    }\n  }) : null);\n}\n\nexport default Wallet;","map":{"version":3,"sources":["/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/src/Components/wallet.jsx"],"names":["React","useState","Wallet","chain","setChangeId","changeId","getChain","values","setValues","amount","setAmount","handleTextChange","name","event","target","value","handleSubmit","preventDefault","id","console","log","map","block"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAGA,SAASC,MAAT,CAAgB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,QAArB;AAA+BC,EAAAA;AAA/B,CAAhB,EAAyD;AAAA,oBACzBL,QAAQ,CAAC;AAAC,UAAM;AAAP,GAAD,CADiB;AAAA;AAAA,QAC9CM,MAD8C;AAAA,QACtCC,SADsC;;AAAA,qBAEzBP,QAAQ,EAFiB;AAAA;AAAA,QAE9CQ,MAF8C;AAAA,QAEtCC,SAFsC;;AAIrD,QAAMC,gBAAgB,GAAGC,IAAI,IAAIC,KAAK,IAAI;AACtCL,IAAAA,SAAS,mBAAMD,MAAN;AAAc,OAACK,IAAD,GAAO,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd;AAArB,OAAT;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGH,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACI,cAAN;AACAb,IAAAA,WAAW,CAACG,MAAM,CAACW,EAAP,CAAU,CAAV,CAAD,CAAX;AAEH,GAJD;;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bf,QAA1B;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBjB,KAArB;AACA,SACI,0CACA;AAAM,IAAA,QAAQ,EAAIa,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,IAAI,EAAE,MADN;AAEA,IAAA,IAAI,EAAC,IAFL;AAGA,IAAA,KAAK,EAAET,MAAM,CAACW,EAHd;AAIA,IAAA,WAAW,EAAC,aAJZ;AAKA,IAAA,QAAQ,EAAEP,gBAAgB,CAAC,IAAD,CAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AAAQ,IAAA,QAAQ,EAAIK,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,CADA,EAYA;AAAQ,IAAA,OAAO,EAAIV,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAZA,EAaCH,KAAK,GAAGA,KAAK,CAACkB,GAAN,CAAUC,KAAK,IAAI;AACzB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,KAAL,CAAP;AACA;AAAC;;;;;;AAK8C;AACjD,GARQ,CAAH,GAQD,IArBL,CADJ;AA4BH;;AAED,eAAepB,MAAf","sourcesContent":["import React, {useState} from 'react';\n\n\nfunction Wallet({chain, setChangeId, changeId, getChain}){\n    const [values, setValues] = useState({\"id\": ''})\n    const [amount, setAmount] = useState()\n\n    const handleTextChange = name => event => {\n        setValues({ ...values, [name]:[event.target.value]});\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        setChangeId(values.id[0])\n\n    }\n    console.log(\"Current id\", changeId)\n    console.log(\"chain\", chain)\n    return (\n        <>\n        <form onSubmit = {handleSubmit}>\n            <input \n            type =\"text\"\n            name=\"id\"\n            value={values.id}\n            placeholder=\"Add ID Here\"\n            onChange={handleTextChange(\"id\")}\n\n            />\n            <button onSubmit = {handleSubmit}>Track</button>\n        </form>\n        <button onClick = {getChain}>Update Transactions</button>\n        {chain ? chain.map(block => {\n           return <h2>{block}</h2>\n           {/* {block.transactions ? Object.keys(block.transactions).map(transaction => {\n                return transaction.recipient && transaction.recipient == block ? \n                (<div>\n                    <h2>{transaction.amount}</h2>\n                </div>) :<h2>two: {transaction}</h2>\n            }) : <h2>three: {block.transactions}</h2>} */}\n        }) : null}\n        \n        \n        \n        </>\n    )\n}\n\nexport default Wallet"]},"metadata":{},"sourceType":"module"}