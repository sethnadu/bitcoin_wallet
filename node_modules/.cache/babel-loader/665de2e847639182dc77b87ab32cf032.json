{"ast":null,"code":"import _slicedToArray from \"/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Wallet from './Components/wallet';\nimport axios from 'axios';\n\nconst App = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        chain = _useState2[0],\n        setChain = _useState2[1];\n\n  const _useState3 = useState(\"seth nadu\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        changeId = _useState4[0],\n        setChangeId = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        total = _useState6[0],\n        setTotal = _useState6[1];\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/chain').then(data => {\n      setChain(data.data.chain); // setChangeId(chain.transactions.recipient)\n    }).then(() => {\n      chain.map(block => {\n        block.transactions.map(transaction => {\n          if (transaction.recipient == changeId) {\n            setTotal(++transaction.amount);\n          }\n        });\n      });\n    }).catch(error => {\n      console.log(\"Error: \", error);\n    });\n  }, []);\n\n  const getChain = () => {\n    axios.get('http://localhost:5000/chain').then(data => {\n      console.log(\"data\", data);\n      setChain(data.data.chain); // setChangeId(chain.transactions.recipient)\n    }).then(() => {\n      chain.map(block => {\n        block.transactions.map(transaction => {\n          if (transaction.recipient == changeId) {\n            setTotal(total + transaction.amount);\n          }\n        });\n      });\n    }).catch(error => {\n      console.log(\"Error: \", error);\n    });\n  };\n\n  console.log(total);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Wallet, {\n    chain: chain,\n    setChangeId: setChangeId,\n    changeId: changeId,\n    getChain: getChain,\n    total: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sethnadu/LambdaCS/Python/bitcoin_wallet/src/App.js"],"names":["React","useState","useEffect","Wallet","axios","App","chain","setChain","changeId","setChangeId","total","setTotal","get","then","data","map","block","transactions","transaction","recipient","amount","catch","error","console","log","getChain"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAGA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACUJ,QAAQ,EADlB;AAAA;AAAA,QACTK,KADS;AAAA,QACFC,QADE;;AAAA,qBAEgBN,QAAQ,CAAC,WAAD,CAFxB;AAAA;AAAA,QAETO,QAFS;AAAA,QAECC,WAFD;;AAAA,qBAGUR,QAAQ,CAAC,CAAD,CAHlB;AAAA;AAAA,QAGTS,KAHS;AAAA,QAGFC,QAHE;;AAKhBT,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFQ,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,IAAI,IAAI;AACZP,MAAAA,QAAQ,CAACO,IAAI,CAACA,IAAL,CAAUR,KAAX,CAAR,CADY,CAEZ;AACD,KALH,EAMGO,IANH,CAMQ,MAAM;AACVP,MAAAA,KAAK,CAACS,GAAN,CAAUC,KAAK,IAAI;AACjBA,QAAAA,KAAK,CAACC,YAAN,CAAmBF,GAAnB,CAAuBG,WAAW,IAAI;AACpC,cAAIA,WAAW,CAACC,SAAZ,IAAyBX,QAA7B,EAAuC;AACrCG,YAAAA,QAAQ,CAAC,EAAEO,WAAW,CAACE,MAAf,CAAR;AACD;AAEF,SALD;AAMD,OAPD;AAQD,KAfH,EAgBGC,KAhBH,CAgBSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACD,KAlBH;AAmBD,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,QAAMG,QAAQ,GAAG,MAAM;AACnBrB,IAAAA,KAAK,CACFQ,GADH,CACO,6BADP,EAEGC,IAFH,CAEQC,IAAI,IAAI;AACZS,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBV,IAApB;AACAP,MAAAA,QAAQ,CAACO,IAAI,CAACA,IAAL,CAAUR,KAAX,CAAR,CAFY,CAGZ;AACD,KANH,EAOGO,IAPH,CAOQ,MAAM;AACVP,MAAAA,KAAK,CAACS,GAAN,CAAUC,KAAK,IAAI;AACjBA,QAAAA,KAAK,CAACC,YAAN,CAAmBF,GAAnB,CAAuBG,WAAW,IAAI;AACpC,cAAIA,WAAW,CAACC,SAAZ,IAAyBX,QAA7B,EAAuC;AACrCG,YAAAA,QAAQ,CAACD,KAAK,GAAGQ,WAAW,CAACE,MAArB,CAAR;AACD;AAEF,SALD;AAMD,OAPD;AAQD,KAhBH,EAiBGC,KAjBH,CAiBSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACD,KAnBH;AAoBH,GArBD;;AAsBAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAIJ,KAAjB;AAAwB,IAAA,WAAW,EAAIG,WAAvC;AAAoD,IAAA,QAAQ,EAAID,QAAhE;AAA0E,IAAA,QAAQ,EAAIiB,QAAtF;AAAgG,IAAA,KAAK,EAAEf,KAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAvDD;;AAyDA,eAAeL,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport logo from './logo.svg';\nimport './App.css';\nimport Wallet from './Components/wallet'\nimport axios from 'axios'\n\n\n\nconst App = () => {\n  const [chain, setChain] = useState()\n  const [changeId, setChangeId] = useState(\"seth nadu\")\n  const [total, setTotal] = useState(0)\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:5000/chain')\n      .then(data => {\n        setChain(data.data.chain)\n        // setChangeId(chain.transactions.recipient)\n      })\n      .then(() => {\n        chain.map(block => {\n          block.transactions.map(transaction => {\n            if (transaction.recipient == changeId) {\n              setTotal(++transaction.amount)\n            }\n            \n          })\n        })\n      })\n      .catch(error => {\n        console.log(\"Error: \", error)\n      })\n  }, [])\n\n  const getChain = () => {\n      axios\n        .get('http://localhost:5000/chain')\n        .then(data => {\n          console.log(\"data\", data)\n          setChain(data.data.chain)\n          // setChangeId(chain.transactions.recipient)\n        })\n        .then(() => {\n          chain.map(block => {\n            block.transactions.map(transaction => {\n              if (transaction.recipient == changeId) {\n                setTotal(total + transaction.amount)\n              }\n              \n            })\n          })\n        })\n        .catch(error => {\n          console.log(\"Error: \", error)\n        })\n  }\n  console.log(total)\n  return (\n    <div className=\"App\">\n      <Wallet chain = {chain} setChangeId = {setChangeId} changeId = {changeId} getChain = {getChain} total={total}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}